server:
  port: 8082

spring:
  cloud:
    stream:
      binders:          # 负责与MQ集成的组件  需要绑定的rabbitmq的服务信息,可以绑定多个服务，如果大于一个，需要设置默认binder（如上配置）
        rabbit:             # binder  组件的名称，用于binding整合  与下边binding的名称相同
          type: rabbit        # 消息组件类型
          environment:     #配置rabbimq连接环境
            spring:
              rabbitmq:
                host: 127.0.0.1
                username: guest
                password: guest
                port: 5672
      rabbit: # 绑定属性  如果是kafka，则这块写kafka
        bindings:
          loginStatusInPut:
            consumer:
              bindingRoutingKeyDelimiter: ','
              bindingRoutingKey: order,acc#      #    绑定路由键  消费destination下路由为bindingRoutingKey的消息
      bindings:                                   # 服务整合，绑定binder  MQ中间件与最终用户提供的应用程序代码(生产者/消费者)之间的桥梁
        loginStatusInPut:                             # 相当于exchange
          binder: rabbit                          # 绑定组件和代码逻辑
          destination: exchange.cospower.loginStatus              # 制定目的地
          content-type: application/json          # 设置消息类型 json
          group: 1                      # 分组 group的值仅仅只是将destination分组，跟其他的值没有任何关系
#        responseMessage:                             # 相当于exchange
#          binder: rabbit                          # 绑定组件和代码逻辑
#          destination: responseMessage             # 制定目的地
#          content-type: application/json          # 设置消息类型 json
#          group: resposeGroup                      # 分组
